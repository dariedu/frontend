import React from 'react'
// import { json } from 'stream/consumers'
import parse from 'html-react-parser';



type TTextEdit = {
  text: string
}

// const textPosition = {
//   middle: "<m>",
//   left: "<l>",
//   right: "<r>",
//   justify: "<j>"
// }

// const textFormats = {
//   italic: "<i></i>",
//   bold: "<b></b>",
//   underline: "<u></u>",
//   crossed: "<c></c>"
// }

// const redLine = {
//   oneBr: "<br1>",
//   twoBr:"<br2>"
// }

// console.log(redLine, textFormats, textPosition)

// –ì–ª–∞–≤–Ω–æ–µ! –ß—Ç–æ–±—ã –Ω–µ –∑–∞–ø—É—Ç–∞—Ç—å—Å—è, —Å–ª–µ–¥—É–π—Ç–µ –ø–æ –ø–æ—Ä—è–¥–∫—É –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏! 
// –û–±—â–∞—è –∏–¥–µ—è –¥–µ–ª–∏—Ç—Å—è –Ω–∞ —á–µ—Ç—ã—Ä–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —à–∞–≥–∞: 1.–ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç => 2. –¥–µ–ª–∏–º –Ω–∞ –∞–±–∑–∞—Ü—ã => 3. –∑–∞–¥–∞–µ–º –∫—Ä–∞—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É => 4. –≤–Ω—É—Ç—Ä–∏ –∞–±–∑–∞—Ü–µ–≤ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏
// –í—Å–µ —Å–∏–º–≤–æ–ª—ã –ø–∏—à–∏—Ç–µ –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏, –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤, —Ä–æ–≤–Ω–æ —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ –Ω–∞–ø–∏—Å–∞–Ω—ã –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.
// –î–ª—è —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏ –∏—Ö –º–æ–∂–Ω–æ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ–±—ã —Ç–æ—á–Ω–æ –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ –Ω–µ –Ω–∞–ø–∏—Å–∞—Ç—å. 
// –í—Å–µ —Å–∏–º–≤–æ–ª—ã –Ω–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–π —Ä–∞—Å–∫–ª–∞–¥–∫–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã!
// 1. –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ "<l>" : "–ø–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é"; "<r>" : "–ø–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é"; "<j>" : "—Ä–∞—Å—Ç—è–Ω—É—Ç—å –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"; "<m>" : "–æ—Ç—Ü–µ–Ω—Ç—Ä–æ–≤–∞—Ç—å"
// –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: —Å–ª–µ–≤–∞. –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç—Å—è –≤–µ—Å—å —Ç–µ–∫—Å—Ç —Å—Ä–∞–∑—É. –¢–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑. –°—Ç–∞–≤–∏–º –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–∞–º—ã–º –Ω–∞—á–∞–ª–æ–º —Ç–µ–∫—Å—Ç–∞, –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π. –ï—Å–ª–∏ –Ω–µ –Ω–∞–ø–∏—à–µ—Ç–µ, —Ç–æ –±—É–¥–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: —Å–ª–µ–≤–∞.
// 2. –î–µ–ª–∏–º —Ç–µ–∫—Å—Ç –¥–∞ –∞–±–∑–∞—Ü—ã, –≤—Å–µ–≥–¥–∞ –ø–æ 2 —Å—Ç—Ä–æ–∫–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è! —Å–∏–º–≤–æ–ª: <br2>
///3. –í –∫–∞–∂–¥–æ–º –∞–±–∑–∞—Ü–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∫—Ä–∞—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É, –∫—Ä–∞—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å —Ä–∞–∑–Ω—ã–º –æ—Ç—Å—Ç—É–ø–æ–º: <p0> - –Ω–µ—Ç –æ—Ç—Å—Ç—É–ø–∞, –¥–∞–ª–µ–µ —Ü—ã—Ñ—Ä—ã –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç –æ—Ç—Å—Ç—É–ø
/// –í–Ω–∏–º–∞–Ω–∏–µ! –Ω–µ –≤—Å–µ —Ü–∏—Ñ—Ä—ã –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å! —Ü–∏—Ñ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 20, 24, 28, 32, 36, 40.
///// –Ω–∞–ø–∏—Ä–º–µ—Ä <p40>, <p20>, <p32>. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¢–û–õ–¨–ö–û –û–î–ò–ù –†–ê–ó –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –∞–±–∑–∞—Ü–∞. –ë–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π.
// 4. —Ç–µ–ø–µ—Ä—å –≤ –∫–∞–∂–¥–æ–º –∏–∑ –∞–±–∑–∞—Ü–µ–≤ –º–æ–∂–Ω–æ –ø—Ä–∏–µ–º–Ω—è—Ç—å –¥—Ä—É–≥–∏–µ —Å–∏–º–≤–æ–ª—ã:
// <b></b> - –≤—ã–¥–µ–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –∂–∏—Ä–Ω—ã–º, –ø—Ä–∏–º–µ—Ä: <b>—Ç–µ–∫—Å—Ç</b> => —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –Ω–∞–ø–∏—Å–∞–Ω –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º (–º–æ–∂–µ—Ç –±—ã—Ç—å –≤–Ω—É—Ç—Ä–∏ –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä
// <i><b>—Ç–µ–∫—Å—Ç</b></i> - –∂–∏—Ä–Ω—ã–π –∏ –∫—É—Ä—Å–∏–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ; <u><b>—Ç–µ–∫—Å—Ç</b></u> - –∂–∏—Ä–Ω—ã–π –∏ –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ; <—Å><b>—Ç–µ–∫—Å—Ç</b></—Å> - –∂–∏—Ä–Ω—ã–π –∏ –∑–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ;)
// <i></i> - –≤—ã–¥–µ–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –∫—É—Ä—Å–∏–≤–æ–º, –ø—Ä–∏–º–µ—Ä: <i>—Ç–µ–∫—Å—Ç</i> => —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –Ω–∞–ø–∏—Å–∞–Ω –∫—É—Ä—Å–∏–≤–æ–º ( –ù–ï –ú–û–ñ–ï–¢ –±—ã—Ç—å –≤–Ω—É—Ç—Ä–∏ –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞)
// <u></u> - –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç, –ø—Ä–∏–º–µ—Ä: <u>—Ç–µ–∫—Å—Ç</u> => —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç ( –ù–ï –ú–û–ñ–ï–¢ –±—ã—Ç—å –≤–Ω—É—Ç—Ä–∏ –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞)
// <—Å></—Å> - –ø–µ—Ä–µ—á–µ—Ä–∫–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç, –ø—Ä–∏–º–µ—Ä: <c>—Ç–µ–∫—Å—Ç</c> => —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ—á–µ—Ä–∫–Ω—É—Ç ( –ù–ï –ú–û–ñ–ï–¢ –±—ã—Ç—å –≤–Ω—É—Ç—Ä–∏ –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞)
// <br1> - –¥–µ–ª–∞–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: –î–æ–ª–æ–π –±–µ–¥—É ‚Äì –¥–∞—Ä–∏ –µ–¥—É!<br1>ü§ç => —Å–µ—Ä–¥–µ—á–Ω–æ –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É.
//  –ú–æ–∂–Ω–æ —Å—Ç–∞–≤–∏—Ç—å —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ –ø–æ–¥—Ä—è–¥, –æ–¥–∏–Ω —Ç–∞–∫–æ–π "—Å–∏–º–≤–æ–ª" —Å–æ–∑–¥–∞–µ—Ç –æ–¥–∏–Ω –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏
/// –ë–æ–Ω—É—Å —Å—Å—ã–ª–∫–∞: <link><link>, –Ω–∞–ø—Ä–∏–º–µ—Ä <link>–ª—é–±–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –≤—ã–±–æ—Ä –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤<link>.
/// —Å—Å—ã–ª–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ –æ–¥–Ω–æ–º –∞–±–∑–∞—Ü–µ, –∏ –≤—Å—è –≤–æ—Ç —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ (<link>–ª—é–±–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –≤—ã–±–æ—Ä –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤<link>)
//  –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–∞ —Å–ª–æ–≤–æ–º "—Ç—É—Ç" –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ, —Ç–∞–∫, —á—Ç–æ —Å—Å—ã–ª–∫—É –Ω—É–∂–Ω–æ –≤–ø–∏—Å–∞—Ç—å –≤ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:
///  –ê <link>–ª—é–±–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –≤—ã–±–æ—Ä –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤<link> –≤—ã –Ω–∞–π–¥–µ—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏. –∏—Ç–æ–≥ => –ê —Ç—É—Ç –≤—ã –Ω–∞–π–¥–µ—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏.

function findTextPosition(text: string, setPosition: React.Dispatch<React.SetStateAction<"left" | "center" | "right" | "justify">>) {
  const match = text.match(/<(m|l|r|j)>/);
  // console.log(match, 'match')
  let position: "left" | "center" | "right" | "justify"  = "left";
  if (match) {
     position = match[0] == "<m>" ? "center" : match[0] == "<l>" ? "left" : match[0] == "<r>" ? "right" : match[0] == "<j>" ? "justify" : "left";
  }
  setPosition(position)
}

const TextEdit: React.FC<TTextEdit> = ({ text }) => {
// —É–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–µ —Ç—Ä–∏ —Å–∏–º–≤–æ–ª–∞ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const afterPosition = text.replace(/<(m|l|r|j)>/g, '');
  // –¥–µ–ª–∏–º –Ω–∞ –±–ª–æ–∫–∏ –ø–æ –¥–≤–∞ –æ—Ç—Å—Ç—É–ø–∞
  let afterStyles = afterPosition.split('<br2>')
    .map((t) => {
  // —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Å—Å—ã–ª–∫–æ–π
 const link = t.match(/<link>(.*?)<link>/);
  if (link) {
    t =  t.replace(link[0], `<a className='text-light-brand-green' href=${link[1]} target='_blank' rel='noopener noreferrer'>—Ç—É—Ç</a>`) 
      }
      // —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Å—Å—ã–ª–∫–æ–π  
    
    //–∏—â–µ–º –æ—Ç—Å—Ç—É–ø—ã
      const matchArr = t.match(/<p(\d)>/);
      if (matchArr) {
      return  t = `<div className=${"indent-"+matchArr[1]} >${t.replace(matchArr[0], '')}</div>`
      }
      const matchArr2 = t.match(/<p(\d\d)>/);
      if (matchArr2) {
        console.log(matchArr2, "matchArr2")
        return t = `<div className=${"indent-"+matchArr2[1]} >${t.replace(matchArr2[0], '')}</div>`
      }
      //–∏—â–µ–º –æ—Ç—Å—Ç—É–ø—ã
      
      return t.replace(/<i>/g, '<p className="italic inline">').replace(/<\/i>/g, "</p>")
        .replace(/<b>/g, '<strong className="inline">').replace(/<\/b>/g, "</strong>")
        .replace(/<u>/g, '<p className="underline inline">').replace(/<\/u>/g, "</p>");
    }
  ).join('<br/><br/>');

  afterStyles = afterStyles.replace(/<br1>/g, "<br/>").replace(/<c>/g, '<p className="line-through inline">').replace(/<\/c>/g, "</p>");
 console.log(afterStyles, "afterStyles")
 const final = `<p className="">${afterStyles}</p>`
return parse(final)
}
 
export default TextEdit
export {findTextPosition}